version: "2.2"
services: 
  ############################################## NGINX ##############################################
  nginx:
    container_name: 'nginx'
    restart: unless-stopped
    build: 
      context: .
      dockerfile: docker/Dockerfile-nginx
      args: 
        NGINX_VERSION: ${NGINX_VERSION}
    ports: 
      - 80:80       # Splunk
      - 443:443     # Splunk
      - 8089:8089   # Splunk API
      - 8083:8083   # connect
      - 9021:9021   # control-center
      #- 8082:8082  # rest-proxy
      #- 8088:8088  # ksqldb-server
    networks: 
      - default
      - splunk-backend
      - kafka-backend
    depends_on: 
      - splunk
      - connect
      - control-center
      #- rest-proxy
      #- connect
      #- ksqldb-server
    # cpus: 1
    # mem_limit: 100M

  ############################################## Logstash ##############################################
  logstash:
    container_name: 'logstash'
    restart: unless-stopped
    build: 
      context: .
      dockerfile: docker/Dockerfile-logstash
      args:
        LOGSTASH_VERSION: ${LOGSTASH_VERSION}
    ports: 
      - 5044:5044/tcp
    networks: 
      - default
      - logstash-backend
      - splunk-backend
    depends_on: 
      - splunk
      - broker
    # cpus: 4
    # mem_limit: 2G

  ############################################## Zookeeper ##############################################
  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    restart: unless-stopped
    container_name: zookeeper
    depends_on: 
      - splunk
    networks: 
      - kafka-backend
      - splunk-backend
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes: 
      - zk-data:/var/lib/zookeeper/data
      - zk-logs:/var/lib/zookeeper/log
    # cpus: 1
    # mem_limit: 150M 

  ############################################## Kafka ##############################################
  broker:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    restart: unless-stopped
    container_name: broker
    depends_on:
      - zookeeper
      - splunk
    networks: 
      - default
      - kafka-backend
      - splunk-backend
    volumes: 
      - kafka-data:/var/lib/kafka/data
      - kafka-logs:/var/lib/kafka/logs
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL_NETWORK:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,EXTERNAL_NETWORK://spunk-kafka.hackinglab.local:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # Only log errors to output
      KAFKA_LOG4J_ROOT_LOGLEVEL: ${ROOT_LOGLEVEL}
      # Enable log cleaner
      KAFKA_LOG_CLEANER_ENABLE: 'true'
      # Keep logs for 72 hours  (3 days)
      KAFKA_LOG_RETENTION_HOURS: 72
      # Keep up to 100 gigabytes of logs
      KAFKA_LOG_RETENTION_BYTES: 100000000000
    # cpus: 4
    # mem_limit: 2G 
    
  ############################################## Schema registry ##############################################
  schema-registry:
    image: confluentinc/cp-schema-registry:${CONFLUENT_VERSION}
    restart: unless-stopped
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    networks: 
      - kafka-backend
      - splunk-backend
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: ${ROOT_LOGLEVEL}
    # cpus: 1
    # mem_limit: 500M 

  ############################################## Connect ##############################################
  connect:
    build: 
      context: .
      dockerfile: docker/Dockerfile-kafka-connect
      args:
        CONFLUENT_VERSION: ${CONFLUENT_VERSION}
        KAFKA_CONNECT_SPLUNK: ${KAFKA_CONNECT_SPLUNK}
    restart: unless-stopped
    container_name: connect
    depends_on:
      - zookeeper
      - broker
      - schema-registry
      - splunk
    networks: 
      - kafka-backend
      - splunk-backend
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      CONNECT_LOG4J_ROOT_LOGLEVEL: ${ROOT_LOGLEVEL}
    # cpus: 2
    # mem_limit: 2500M 

  ############################################## Kafka Control center ##############################################
  control-center:
    image: confluentinc/cp-enterprise-control-center:${CONFLUENT_VERSION}
    restart: unless-stopped
    container_name: control-center
    depends_on:
      - zookeeper
      - broker
      - schema-registry
      - connect
      - ksqldb-server
    networks: 
      - kafka-backend
      - splunk-backend
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_LOG4J_ROOT_LOGLEVEL: ${ROOT_LOGLEVEL}
      PORT: 9021
    # cpus: 1
    # mem_limit: 1G

  ############################################## KsqlDB ##############################################
  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:${CONFLUENT_VERSION}
    restart: unless-stopped
    container_name: ksqldb-server
    depends_on:
      - broker
      - connect
    networks: 
      - default
      - kafka-backend
      - splunk-backend
    ports:
      - 8088:8088
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "broker:29092"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_LOG4J_ROOT_LOGLEVEL: ${ROOT_LOGLEVEL}
    # cpus: 1
    # mem_limit: 500M 

  ############################################## KsqlDB client ##############################################
  ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:${CONFLUENT_VERSION}
    restart: unless-stopped
    container_name: ksqldb-cli
    networks: 
      - kafka-backend
      - splunk-backend
    depends_on:
      - broker
      - connect
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    # cpus: 1
    # mem_limit: 100M

  ############################################## Kafka Rest proxy ##############################################
  rest-proxy:
    image: confluentinc/cp-kafka-rest:${CONFLUENT_VERSION}
    restart: unless-stopped
    container_name: rest-proxy
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    networks: 
      - default
      - kafka-backend
      - splunk-backend
    ports:
      - 8082:8082
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
    # cpus: 2
    # mem_limit: 300M 

  ############################################## Splunk ##############################################
  splunk:
    build: 
      context: .
      dockerfile: docker/Dockerfile-splunk
      args:
        SPLUNK_VERSION: ${SPLUNK_VERSION}
    restart: unless-stopped
    container_name: splunk
    networks:
      - splunk-backend
    environment:
      - SPLUNK_START_ARGS="--accept-license"
      #- SPLUNK_PASSWORD=Changeme123!
    volumes: 
      - splunk-var:/opt/splunk/var
      - splunk-etc:/opt/splunk/etc
      - splunk-tmp:/tmp/defaults
    # cpus: 8
    # mem_limit: 12G

volumes: 
  kafka-data:
  kafka-logs:
  zk-data:
  zk-logs:
  splunk-var:
  splunk-etc:
  splunk-tmp:

networks: 
  logstash-backend:
  kafka-backend:
  splunk-backend: